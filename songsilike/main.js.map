{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/about.component.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/categories/categorylist.component.ts","webpack:///./src/app/navbar.component.ts","webpack:///./src/app/songlist/songlist.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  template: `\r\n    <div class=\"container\">\r\n      about\r\n    </div>\r\n  `\r\n})\r\nexport class AboutComponent {\r\n  \r\n}\r\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AppComponent } from './app.component';\nimport { CategorylistComponent } from './categories/categorylist.component';\nimport { AboutComponent } from './about.component';\nimport { SonglistComponent } from './songlist/songlist.component';\n\nconst routes: Routes = [\n  {path: '', component: SonglistComponent},\n  {path: 'categories', component: CategorylistComponent},\n  {path: 'about', component: AboutComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  template: `\n  <div class=\"header\">\n    <app-navbar></app-navbar>\n  </div>\n  <main class=\"container\">\n    <router-outlet></router-outlet>\n  </main>\n  `,\n  styles: [\n    `.header {\n      background: rgb(20,20,50);\n      color: white;\n    }`,\n    `main {\n      background: rgba(30,30,80);\n      height: 80%;\n    }`\n  ]\n})\nexport class AppComponent {\n  \n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { NavbarComponent } from './navbar.component';\nimport { CategorylistComponent } from './categories/categorylist.component';\nimport { AboutComponent } from './about.component';\nimport { SonglistComponent } from './songlist/songlist.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavbarComponent,\n    SonglistComponent,\n    CategorylistComponent,\n    AboutComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  template: `\r\n    <div class=\"container\">\r\n      categories\r\n    </div>\r\n  `\r\n})\r\nexport class CategorylistComponent {\r\n  \r\n}\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-navbar',\r\n  template: `\r\n    <div class=\"container\">\r\n      <nav class=\"navbar navbar-fixed-top\">\r\n        <div class=\"navbar-header\">\r\n          <h1 class=\"navbar-brand\">{{title}}</h1>\r\n        </div>\r\n        <div id=\"navbar\">\r\n          <ul class=\"navbar list-inline\">\r\n            <li class=\"list-inline-item\"><a routerLink=\"\">Songs</a></li>\r\n            <li class=\"list-inline-item\"><a routerLink=\"categories\">Categories</a></li>\r\n            <li class=\"list-inline-item\"><a routerLink=\"about\">About</a></li>\r\n            <li class=\"list-inline-item\"><a>Search</a></li>\r\n          </ul>\r\n        </div>\r\n      </nav>\r\n    </div>\r\n  `\r\n})\r\nexport class NavbarComponent {\r\n  title = 'Songs I Like';\r\n}\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  template: `\r\n    <div class=\"container\">\r\n      songs\r\n    </div>\r\n  `\r\n})\r\nexport class SonglistComponent {\r\n  \r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n\n"],"sourceRoot":""}